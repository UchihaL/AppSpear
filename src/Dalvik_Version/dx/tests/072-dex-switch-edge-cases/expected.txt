Blort.test1:(I)I:
regs: 0005; ins: 0002; outs: 0000
  0000: move-object v0, v3
  0001: move v1, v4
  0002: move v2, v1
  0003: const/4 v2, #int 0 // #0
  0004: move v0, v2
  0005: return v0
Blort.test2:(I)I:
regs: 0005; ins: 0002; outs: 0000
  0000: move-object v0, v3
  0001: move v1, v4
  0002: move v2, v1
  0003: packed-switch v2, 000c // +0009
  0006: const/4 v2, #int 1 // #1
  0007: move v0, v2
  0008: return v0
  0009: const/4 v2, #int 0 // #0
  000a: move v0, v2
  000b: goto 0008 // -0003
  000c: packed-switch-payload // for switch @ 0003
          0: 00000009 // +00000006
Blort.test3:(I)I:
regs: 0005; ins: 0002; outs: 0000
  0000: move-object v0, v3
  0001: move v1, v4
  0002: move v2, v1
  0003: packed-switch v2, 000c // +0009
  0006: const/4 v2, #int 1 // #1
  0007: move v0, v2
  0008: return v0
  0009: const/4 v2, #int 0 // #0
  000a: move v0, v2
  000b: goto 0008 // -0003
  000c: packed-switch-payload // for switch @ 0003
          -2147483648: 00000009 // +00000006
Blort.test4:(I)I:
regs: 0005; ins: 0002; outs: 0000
  0000: move-object v0, v3
  0001: move v1, v4
  0002: move v2, v1
  0003: packed-switch v2, 000c // +0009
  0006: const/4 v2, #int 1 // #1
  0007: move v0, v2
  0008: return v0
  0009: const/4 v2, #int 0 // #0
  000a: move v0, v2
  000b: goto 0008 // -0003
  000c: packed-switch-payload // for switch @ 0003
          2147483647: 00000009 // +00000006
Blort.test5:(I)I:
regs: 0005; ins: 0002; outs: 0000
  0000: move-object v0, v3
  0001: move v1, v4
  0002: move v2, v1
  0003: sparse-switch v2, 0010 // +000d
  0006: const/4 v2, #int 2 // #2
  0007: move v0, v2
  0008: return v0
  0009: const/4 v2, #int 0 // #0
  000a: move v0, v2
  000b: goto 0008 // -0003
  000c: const/4 v2, #int 1 // #1
  000d: move v0, v2
  000e: goto 0008 // -0006
  000f: nop // spacer
  0010: sparse-switch-payload // for switch @ 0003
          -2147483648: 0000000c // +00000009
          0: 00000009 // +00000006
Blort.test6:(I)I:
regs: 0005; ins: 0002; outs: 0000
  0000: move-object v0, v3
  0001: move v1, v4
  0002: move v2, v1
  0003: sparse-switch v2, 0010 // +000d
  0006: const/4 v2, #int 2 // #2
  0007: move v0, v2
  0008: return v0
  0009: const/4 v2, #int 0 // #0
  000a: move v0, v2
  000b: goto 0008 // -0003
  000c: const/4 v2, #int 1 // #1
  000d: move v0, v2
  000e: goto 0008 // -0006
  000f: nop // spacer
  0010: sparse-switch-payload // for switch @ 0003
          0: 00000009 // +00000006
          2147483647: 0000000c // +00000009
Blort.test7:(I)I:
regs: 0005; ins: 0002; outs: 0000
  0000: move-object v0, v3
  0001: move v1, v4
  0002: move v2, v1
  0003: sparse-switch v2, 0010 // +000d
  0006: const/4 v2, #int 2 // #2
  0007: move v0, v2
  0008: return v0
  0009: const/4 v2, #int 0 // #0
  000a: move v0, v2
  000b: goto 0008 // -0003
  000c: const/4 v2, #int 1 // #1
  000d: move v0, v2
  000e: goto 0008 // -0006
  000f: nop // spacer
  0010: sparse-switch-payload // for switch @ 0003
          -2147483648: 00000009 // +00000006
          2147483647: 0000000c // +00000009
Blort.test8:(I)I:
regs: 0005; ins: 0002; outs: 0000
  0000: move-object v0, v3
  0001: move v1, v4
  0002: move v2, v1
  0003: sparse-switch v2, 0010 // +000d
  0006: const/4 v2, #int 2 // #2
  0007: move v0, v2
  0008: return v0
  0009: const/4 v2, #int 0 // #0
  000a: move v0, v2
  000b: goto 0008 // -0003
  000c: const/4 v2, #int 1 // #1
  000d: move v0, v2
  000e: goto 0008 // -0006
  000f: nop // spacer
  0010: sparse-switch-payload // for switch @ 0003
          0: 00000009 // +00000006
          1288490184: 0000000c // +00000009
