Blort.test_dup:()V:
regs: 0003; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: move v2, v0
  0002: move v0, v2
  0003: move v1, v2
  0004: invoke-static {v1}, Blort.consume1:(I)V
  0007: invoke-static {v0}, Blort.consume2:(I)V
  000a: return-void
Blort.test_dup2_form1:()V:
regs: 0006; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: move v4, v0
  0003: move v5, v1
  0004: move v0, v4
  0005: move v1, v5
  0006: move v2, v4
  0007: move v3, v5
  0008: invoke-static {v3}, Blort.consume1:(I)V
  000b: invoke-static {v2}, Blort.consume2:(I)V
  000e: invoke-static {v1}, Blort.consume3:(I)V
  0011: invoke-static {v0}, Blort.consume4:(I)V
  0014: return-void
Blort.test_dup2_form2:()V:
regs: 0006; ins: 0000; outs: 0002
  0000: const-wide/16 v0, #long 0 // #0000
  0002: move-wide v4, v0
  0003: move-wide v0, v4
  0004: move-wide v2, v4
  0005: invoke-static {v2, v3}, Blort.consume1:(J)V
  0008: invoke-static {v0, v1}, Blort.consume2:(J)V
  000b: return-void
Blort.test_dup2_x1_form1:()V:
regs: 0008; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: const/4 v2, #int 2 // #2
  0003: move v5, v0
  0004: move v6, v1
  0005: move v7, v2
  0006: move v0, v6
  0007: move v1, v7
  0008: move v2, v5
  0009: move v3, v6
  000a: move v4, v7
  000b: invoke-static {v4}, Blort.consume1:(I)V
  000e: invoke-static {v3}, Blort.consume2:(I)V
  0011: invoke-static {v2}, Blort.consume3:(I)V
  0014: invoke-static {v1}, Blort.consume4:(I)V
  0017: invoke-static {v0}, Blort.consume5:(I)V
  001a: return-void
Blort.test_dup2_x1_form2:()V:
regs: 0008; ins: 0000; outs: 0002
  0000: const/4 v0, #int 0 // #0
  0001: const-wide/16 v1, #long 1 // #0001
  0003: move v5, v0
  0004: move-wide v6, v1
  0005: move-wide v0, v6
  0006: move v2, v5
  0007: move-wide v3, v6
  0008: invoke-static {v3, v4}, Blort.consume1:(J)V
  000b: invoke-static {v2}, Blort.consume2:(I)V
  000e: invoke-static {v0, v1}, Blort.consume3:(J)V
  0011: return-void
Blort.test_dup2_x2_form1:()V:
regs: 000a; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: const/4 v2, #int 2 // #2
  0003: const/4 v3, #int 3 // #3
  0004: move v6, v0
  0005: move v7, v1
  0006: move v8, v2
  0007: move v9, v3
  0008: move v0, v8
  0009: move v1, v9
  000a: move v2, v6
  000b: move v3, v7
  000c: move v4, v8
  000d: move v5, v9
  000e: invoke-static {v5}, Blort.consume1:(I)V
  0011: invoke-static {v4}, Blort.consume2:(I)V
  0014: invoke-static {v3}, Blort.consume3:(I)V
  0017: invoke-static {v2}, Blort.consume4:(I)V
  001a: invoke-static {v1}, Blort.consume5:(I)V
  001d: invoke-static {v0}, Blort.consume6:(I)V
  0020: return-void
Blort.test_dup2_x2_form2:()V:
regs: 000a; ins: 0000; outs: 0002
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: const-wide/16 v2, #long 2 // #0002
  0004: move v6, v0
  0005: move v7, v1
  0006: move-wide v8, v2
  0007: move-wide v0, v8
  0008: move v2, v6
  0009: move v3, v7
  000a: move-wide v4, v8
  000b: invoke-static {v4, v5}, Blort.consume1:(J)V
  000e: invoke-static {v3}, Blort.consume2:(I)V
  0011: invoke-static {v2}, Blort.consume3:(I)V
  0014: invoke-static {v0, v1}, Blort.consume4:(J)V
  0017: return-void
Blort.test_dup2_x2_form3:()V:
regs: 000a; ins: 0000; outs: 0002
  0000: const-wide/16 v0, #long 0 // #0000
  0002: const/4 v2, #int 1 // #1
  0003: const/4 v3, #int 2 // #2
  0004: move-wide v6, v0
  0005: move v8, v2
  0006: move v9, v3
  0007: move v0, v8
  0008: move v1, v9
  0009: move-wide v2, v6
  000a: move v4, v8
  000b: move v5, v9
  000c: invoke-static {v5}, Blort.consume1:(I)V
  000f: invoke-static {v4}, Blort.consume2:(I)V
  0012: invoke-static {v2, v3}, Blort.consume3:(J)V
  0015: invoke-static {v1}, Blort.consume4:(I)V
  0018: invoke-static {v0}, Blort.consume5:(I)V
  001b: return-void
Blort.test_dup2_x2_form4:()V:
regs: 000a; ins: 0000; outs: 0002
  0000: const-wide/16 v0, #long 0 // #0000
  0002: const-wide/16 v2, #long 1 // #0001
  0004: move-wide v6, v0
  0005: move-wide v8, v2
  0006: move-wide v0, v8
  0007: move-wide v2, v6
  0008: move-wide v4, v8
  0009: invoke-static {v4, v5}, Blort.consume1:(J)V
  000c: invoke-static {v2, v3}, Blort.consume2:(J)V
  000f: invoke-static {v0, v1}, Blort.consume3:(J)V
  0012: return-void
Blort.test_dup_x1:()V:
regs: 0005; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: move v3, v0
  0003: move v4, v1
  0004: move v0, v4
  0005: move v1, v3
  0006: move v2, v4
  0007: invoke-static {v2}, Blort.consume1:(I)V
  000a: invoke-static {v1}, Blort.consume2:(I)V
  000d: invoke-static {v0}, Blort.consume3:(I)V
  0010: return-void
Blort.test_dup_x2_form1:()V:
regs: 0007; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: const/4 v2, #int 2 // #2
  0003: move v4, v0
  0004: move v5, v1
  0005: move v6, v2
  0006: move v0, v6
  0007: move v1, v4
  0008: move v2, v5
  0009: move v3, v6
  000a: invoke-static {v3}, Blort.consume1:(I)V
  000d: invoke-static {v2}, Blort.consume2:(I)V
  0010: invoke-static {v1}, Blort.consume3:(I)V
  0013: invoke-static {v0}, Blort.consume4:(I)V
  0016: return-void
Blort.test_dup_x2_form2:()V:
regs: 0007; ins: 0000; outs: 0002
  0000: const-wide/16 v0, #long 0 // #0000
  0002: const/4 v2, #int 1 // #1
  0003: move-wide v4, v0
  0004: move v6, v2
  0005: move v0, v6
  0006: move-wide v1, v4
  0007: move v3, v6
  0008: invoke-static {v3}, Blort.consume1:(I)V
  000b: invoke-static {v1, v2}, Blort.consume2:(J)V
  000e: invoke-static {v0}, Blort.consume3:(I)V
  0011: return-void
Blort.test_pop:()V:
regs: 0002; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: invoke-static {v0}, Blort.consume1:(I)V
  0005: return-void
Blort.test_pop2_form1:()V:
regs: 0003; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: const/4 v2, #int 2 // #2
  0003: invoke-static {v0}, Blort.consume1:(I)V
  0006: return-void
Blort.test_pop2_form2:()V:
regs: 0003; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const-wide/16 v1, #long 0 // #0000
  0003: invoke-static {v0}, Blort.consume1:(I)V
  0006: return-void
Blort.test_swap:()V:
regs: 0004; ins: 0000; outs: 0001
  0000: const/4 v0, #int 0 // #0
  0001: const/4 v1, #int 1 // #1
  0002: move v2, v0
  0003: move v3, v1
  0004: move v0, v3
  0005: move v1, v2
  0006: invoke-static {v1}, Blort.consume1:(I)V
  0009: invoke-static {v0}, Blort.consume2:(I)V
  000c: return-void
